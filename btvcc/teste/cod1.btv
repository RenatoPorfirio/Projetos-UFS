-- ** Criado por Mota no dia 04/07 às 17:20h para fazer alguns incrementos **

-- Declaração da Família
molde Aluno se passa por Usuario; molde Professor se passa por Usuario.


-- *** DECLARAÇÃO DOS MOLDES ***

---------------------------- MOLDE USUARIO ----------------------------
molde Usuario contem
  -- Objetos
  objeto: Comunicacao interface;

  -- Atributos
  constante: Texto nome;
  constante: Numero cpf;
  constante: Bool situacao;

  -- Métodos
  funcao: Texto defineNome()[
    interface.escreva("Qual o nome do Usuario?");
    nome = interface.leiaTexto();
  ]

  funcao: Numero defineCPF()[
    interface.escreva("Qual o CPF do Usuario?");
    cpf = interface.leiaNumero();
  ]

  -- função abstrata
  funcao: Texto informaSituacao();   
fim


----------------------------  MOLDE ALUNO ----------------------------
molde Aluno contem
  -- Objetos
  objeto: Notas compiladores;

  -- Atributos 
  constante: Numero matricula;

  -- Métodos
  funcao: Numero defineMatricula(Numero arg_matricula)[
    matricula = arg_matricula;
  ]

  funcao: Texto informaSituacao() [
    se (situacao == verdade)
      entao interface.escreva("Calouro")
      senao interface.escreva("Veterano")
  ]
fim


---------------------------- MOLDE PROFESSOR ----------------------------
molde Professor contem 
  -- Atributos
  constante: Texto departamento;

  -- Métodos
  funcao: Texto defineDepartamento(Texto arg_departamento)[
    departamento = arg_departamento;
  ]


  funcao: Texto informaSituacao() [
    se (situacao == verdade)
      entao interface.escreva("Ativo")
      senao interface.escreva("Inativo")
  ]

fim


----------------------------  MOLDE NOTAS ----------------------------
molde Notas contem
  -- Atributos
  constante: Numero n1;
  constante: Numero n2;
  constante: Numero n3;

  -- Funções
  funcao Numero defineNota(Numero unidade | Numero nota)[
    se (unidade == 1)
      entao n1 = nota
      senao se (unidade == 2)
              entao n2 = nota
              senao se (unidade == 3)
                      entao n3 = nota
                      senao -1
  ]

  funcao: Texto informaSituacao()[
    objeto: Operacoes operacoes;
    constante: Numero somaDasNotas = operacoes.realizaOperacao(n1 | n2 | n3 | operacoes.soma);
    constante: Numero media = somaDasNotas / 3;
    se (media <= 5)
      entao "Reprovado"
      senao "Aprovado"
  ]
fim



---------------------------- MOLDE OPERACOES ----------------------------
molde Operacoes contem

  funcao: Numero soma(Numero valor1 | Numero valor2 | Numero valor3)[
    valor1 + valor2 + valor3;
  ]

  funcao: Numero realizaOperacao(Numero valor1 | Numero valor2 | Numero Valor3 | Numero func(Numero | Numero | Numero))[
    func(valor1 | valor2 | valor3);
  ]
fim



************************ CHAMADA PRINCIPAL ************************
molde Principal contem

>> funcao: Texto principal()[
  -- Instaciação dos Objetos
  objeto: Aluno aluno1 = Aluno [objeto.nome = "Raimundo" | objeto.cpf = 00011122233 | objeto.situacao = verdade | objeto.matricula = 202311];

  objeto: Aluno aluno2;
  aluno2.defineNome();
  aluno2.defineCPF();
  aluno2.defineMatricula(202322);
  aluno2.situacao = falso;
    

  objeto Professor professor1 [situacao = verdade];
  professor1.defineNome();

  objeto Professor professor2;
  professor2.situacao = falso;



  -- Informa se o aluno é Calouro ou Veterano
  interface.escreva(aluno1.informaSituacao()); -- Calouro
  interface.escreva(aluno2.informaSituacao()); -- Veterano)

  -- Informa se o professor é Ativo ou Inativo
  interface.escreva(professor1.informaSituacao()); -- Ativo
  interface.escreva(professor2.informaSituacao()); -- Inativo


  -- Atribuição das notas para o  'aluno1'
  aluno1.compiladores.n1 = 14e-1;
  aluno1.compiladores.n2 = 31E-1;
  aluno1.compiladores.n3 = 624E-2;

  -- Atribuição das notas para o  'aluno2'
  aluno2.compiladores.defineNota(1 | 9);
  aluno2.compiladores.defineNota(2 | 8);
  aluno2.compiladores.defineNota(3 | 10);


  -- Informa a situação do 'aluno1'
  interface.escreva(aluno1.compiladores.informaSituacao()); -- Reprovado

  -- Informa a situação do 'aluno2'
  interface.escreva(aluno2.compiladores.informaSituacao()); -- Aprovado
  ]

fim